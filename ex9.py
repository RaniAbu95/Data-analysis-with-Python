# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# login: abura# id: 316396787# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# Program: Pandas library# Description:# This script performs several operations on a reference file containing data related to# corona patients. Here's a brief description of each step:# The program reads the reference file (in CSV format) and converts it into a table using the Pandas library.# It prints the first 7 rows of the table, allowing you to see a sample of the data.# The program changes the name of the column "disease material" to "severity" using the rename() function in pandas.# The severity column is cleaned to keep only the first word from each entry, indicating the severity level of the# disease. This is achieved by splitting the strings in the column and keeping only the first element using the str.# split() and str[0] functions. The severity column is converted from string values to numeric values. Each severity# level is mapped to a corresponding number using a dictionary, and the map() function is used to apply the mapping to# the column. Empty cells in the height column are filled with the median height of the available data. The fillna()# function is used to replace the missing values with the median value calculated using the median() function.# Rows with empty cells in the weight column are deleted from the table. The dropna() function is used with the subset# parameter to drop rows with missing values in the weight column. Additionally, the weight values are capped at 110 kg# using the np.where() function from the numpy library. The program calculates the correlation matrix between the# different columns in the table using the corr() function in pandas. The correlation matrix indicates the relationships# between the variables and is printed to the terminal.import pandas as pdimport numpy as np# Step 1: Upload the reference file and turn it into a tablereference_file = 'ex10_file.csv'table = pd.read_csv(reference_file)# Step 2: Print the first 7 rows of the tableprint("First 7 rows of the table:")print(table.head(7))# Step 3: Change the name of the column of the disease materialtable.rename(columns={'Severity of illness - worst score during admission': 'disease material'}, inplace=True)# Step 4: Clean the severity column to keep only the first wordtable['disease material'] = table['disease material'].str.split().str[0]# Step 5: Convert the severity column to numeric valuesseverity_mapping = {'Mild': 0, 'Moderate': 1, 'Severe': 2, 'Critical': 3}table['disease material'] = table['disease material'].map(severity_mapping)# Step 6: Fill empty cells in the height column with the median heightmedian_height = table['Height'].median()table['Height'].fillna(median_height, inplace=True)# Step 7: Delete rows with empty cells in the weight column and limit weight at 110 kgtable.dropna(subset=['Weight'], inplace=True)table['Weight'] = np.where(table['Weight'] > 110, 110, table['Weight'])# Step 8: Find correlations between different columns and print themcorrelation = table.corr()print("\nCorrelation between columns:")print(correlation)# # Optional: Save the modified table as a new CSV file# modified_file = 'path_to_modified_file.csv'# table.to_csv(modified_file, index=False)